---
apiVersion: "networking.k8s.io/v1"
kind: "Ingress"
metadata:
  annotations: {}
  uid: "5c9b5782-3aef-4108-af77-07c666933851"
  name: "nginx-ingress"
  labels:
    app.kubernetes.io/name: "ingress"
    app.kubernetes.io/instance: "ingress"
spec:
  rules:
  - host: "your-domain.com"
    http:
      paths:
      - path: "/"
        pathType: "Prefix"
        backend:
          serviceName: nginx-service
          servicePort: 80
status:
  loadBalancer: {}

---
kind: "Endpoints"
apiVersion: "v1"
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2023-08-09T14:20:20Z"
  uid: "2951aa43-f4d8-4135-98bd-2e490e03ce32"
  name: "nginx-service"
  labels:
    app.kubernetes.io/name: "ingress"
    app.kubernetes.io/instance: "ingress"
subsets:
- addresses:
  - ip: "192.168.115.124"
    nodeName: "novartis-test-29721"
    targetRef:
      kind: "Pod"
      name: "nginx-deployment-6f8c8d4f99-j42ls"
      namespace: "ingress"
      uid: "dc8cbf36-e5a2-4e7a-b0b9-9596d85b41a1"
  - ip: "192.168.115.125"
    nodeName: "novartis-test-29721"
    targetRef:
      kind: "Pod"
      name: "nginx-deployment-6f8c8d4f99-dc6wk"
      namespace: "ingress"
      uid: "3ada0ce7-2a53-484a-b9ce-f8320a3e48b5"
  - ip: "192.168.115.126"
    nodeName: "novartis-test-29721"
    targetRef:
      kind: "Pod"
      name: "nginx-deployment-6f8c8d4f99-crsr2"
      namespace: "ingress"
      uid: "f179cff9-018d-4c7a-8472-6d7145d5ae2a"
  ports:
  - port: 80
    protocol: "TCP"

---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  uid: "9fb31fe5-8fd7-48f2-899b-e6b5721d8671"
  name: "nginx-deployment"
  labels:
    app: "nginx"
    app.kubernetes.io/name: "ingress"
    app.kubernetes.io/instance: "ingress"
    app.kubernetes.io/component: "nginx-deployment"
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: "nginx"
    matchExpressions: []
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  template:
    metadata:
      annotations: {}
      labels:
        app: "nginx"
        app.kubernetes.io/name: "ingress"
        app.kubernetes.io/instance: "ingress"
        app.kubernetes.io/component: "nginx-deployment"
    spec:
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      schedulerName: "default-scheduler"
      dnsPolicy: "ClusterFirst"
      containers:
      - name: "nginx-container"
        image: "nginx:latest"
        command: []
        args: []
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        imagePullPolicy: "Always"
        ports:
        - containerPort: 80
          protocol: "TCP"
        resources:
          limits: {}
          requests: {}
      securityContext:
        supplementalGroups: []

---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations: {}
  uid: "aef08c94-8312-4dbd-914a-f2327ff0e477"
  name: "nginx-service"
  labels:
    app.kubernetes.io/name: "ingress"
    app.kubernetes.io/instance: "ingress"
spec:
  clusterIPs:
  - "10.10.174.90"
  ipFamilies:
  - "IPv4"
  ipFamilyPolicy: "SingleStack"
  internalTrafficPolicy: "Cluster"
  clusterIP: "10.10.174.90"
  externalIPs: []
  loadBalancerSourceRanges: []
  sessionAffinity: "None"
  type: "ClusterIP"
  selector:
    app: "nginx"
  ports:
  - port: 80
    protocol: "TCP"
    targetPort: 80
